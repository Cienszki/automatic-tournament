rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check for admin privileges from a custom claim.
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.roles.admin == true || request.auth.token.isAdmin == true;
    }
    
    function isUser() {
      return request.auth.uid != null || request.auth.token.isUser == true;
    }

    // Global:
    match /{document=**} {
      allow read, write: if false;
    }

    // Overrides:
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId || isAdmin();
    }

    match /announcements/{announcementId} {
      allow read: if isUser();
      allow create, update, delete: if isAdmin();
    }

    match /teams/{teamId} {
        allow read: if isUser();
        allow create: if isUser();
        allow update: if get(/databases/$(database)/documents/teams/$(teamId)).data.captainId == request.auth.uid || isAdmin();
        allow delete: if isAdmin();
    }

    match /matches/{matchId} {
      allow read: if isUser();
      allow create, update, delete: if isAdmin();
    }
    
    match /groups/{groupId} {
      allow read: if isUser();
      allow create, update, delete: if isAdmin();
    }

    match /players/{playerId} {
        allow read: if isUser();
        allow create: if isUser();
        // assuming only admins or the player themselves can update their data
        allow update: if request.auth.uid == playerId || isAdmin();
        allow delete: if isAdmin();
    }

    match /stages/{stageId} {
      allow read: if isUser();
      allow create, update, delete: if isAdmin();
    }

    match /configs/{configId} {
      allow read: if isUser();
      allow create, update, delete: if isAdmin();
    }

    match /firebase-frameworks-hosting-controlled-rollouts/{rolloutId} {
      allow read, write: if isAdmin();
    }
  }
}