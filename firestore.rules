rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check for admin privileges.
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Helper function to check if the user is a captain of a specific team.
    function isCaptain(teamId) {
      return request.auth.uid == get(/databases/$(database)/documents/teams/$(teamId)).data.captainId;
    }

    // Helper to check if the user is a captain of a team in a match.
    function isCaptainOfMatch(matchId) {
      let teamA_Id = get(/databases/$(database)/documents/matches/$(matchId)).data.teamA.id;
      let teamB_Id = get(/databases/$(database)/documents/matches/$(matchId)).data.teamB.id;
      return isCaptain(teamA_Id) || isCaptain(teamB_Id);
    }

    // --- PUBLIC READABLE COLLECTIONS ---
    match /announcements/{docId} { allow read: if true; }
    match /teams/{docId} { allow read: if true; }
    match /matches/{docId} { allow read: if true; }
    match /groups/{docId} { allow read: if true; }
    match /stages/{docId} { allow read: if true; }
    match /configs/{docId} { allow read: if true; }
    match /tournament/{docId} { allow read: if true; }
    match /fantasyLineups/{userId} { allow read: if true; }
    match /players/{playerId} { allow read: if true; }
    match /tournamentStats/{docId} { allow read: if true; } // Public read access
    match /playerStats/{docId} { allow read: if true; } // Public read access
    match /teamStats/{docId} { allow read: if true; } // Public read access

    // --- USER-SPECIFIC WRITE RULES ---
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId || isAdmin();
    }
    
    match /pickems/{userId} { // CORRECTED SPELLING
      allow read: if true;
      allow write: if request.auth.uid == userId || isAdmin();
    }

    // Standins collection - readable by anyone, writable by authenticated users, admin can manage
    match /standins/{userId} {
      allow read: if true; // Anyone can read standin profiles
      allow create: if request.auth.uid != null && request.auth.uid == userId; // Authenticated users can create their own
      allow update: if request.auth.uid == userId || isAdmin(); // Users can update their own, admins can update any
      allow delete: if isAdmin(); // Only admins can delete
    }

    // Standin requests collection - captains can create for their teams, admins can manage
    match /standinRequests/{requestId} {
      allow read: if true; // Anyone can read standin requests for transparency
      allow create: if request.auth.uid != null; // Authenticated users (captains) can create requests
      allow update, delete: if isAdmin(); // Only admins can modify requests (server actions use admin SDK)
    }

    match /fantasyLineups/{userId} {
      allow read: if true;
      allow write: if request.auth.uid == userId || isAdmin();
      match /rounds/{roundId} {
        allow read: if true; // Allow public read for leaderboard functionality
        allow write: if request.auth.uid == userId || isAdmin();
      }
    }

    // --- ADMIN-ONLY WRITE RULES ---
    match /announcements/{docId} { allow write: if isAdmin(); }
    match /groups/{docId} { allow write: if isAdmin(); }
    match /stages/{docId} { allow write: if isAdmin(); }
    match /configs/{docId} { allow write: if isAdmin(); }
    match /tournament/{docId} { allow write: if isAdmin(); }
    match /firebase-frameworks-hosting-controlled-rollouts/{rolloutId} { allow write: if isAdmin(); }


    // --- COMPLEX RULES ---
    match /teams/{teamId} {
      allow read: if true;
      allow write: if request.auth.uid != null;
      allow delete: if isAdmin();

      match /players/{playerId} {
        allow read: if true;
        allow write: if request.auth.uid != null;
        allow delete: if isAdmin();
      }
    }

    match /matches/{matchId} {
      allow create, delete: if isAdmin();
      allow update: if isCaptainOfMatch(matchId) || isAdmin();
      
      // Subcollections for match games
      match /games/{gameId} {
        allow read: if true;
        allow write: if isAdmin();
        
        match /performances/{playerId} {
          allow read: if true;
          allow write: if isAdmin();
        }
      }
    }

    // --- ADMIN-ONLY COLLECTIONS ---
    match /processedGames/{gameId} {
      allow read, write: if isAdmin();
    }
    
    match /blockedGames/{gameId} {
      allow read, write: if isAdmin();
    }
    
    // Global deny-all rule for any unmatched documents
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
